name: GAE Deploy

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:

  go-test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: go get -v -t -d ./...
    - name: Test
      run: go test -v -cover -race

  js-test:
    name: JavaScript Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install dependencies
      run: npm install
    - name: Lint
      run: npm run lint
    - name: Test
      run: npm test
    - name: Export Test
      run: npm run export

  gae-deploy-dev:
    name: GAE Deploy DEV
    if: github.ref == 'refs/heads/develop'
    needs: [go-test, js-test]
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Install dependencies
      run: npm install
    - name: Export assets
      run: npm run export
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Recover App Secrets DEV
      run: 'echo "$APP_SECRETS_DEV_YAML" > secrets.dev.yaml'
      shell: bash
      env:
        APP_SECRETS_DEV_YAML: ${{ secrets.APP_SECRETS_DEV_YAML }}
    - name: Deploy DEV
      run: gcloud app deploy ./app.dev.yaml --quiet

  gae-deploy-prod:
    name: GAE Deploy PROD
    if: github.ref == 'refs/heads/main'
    needs: [go-test, js-test]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: 0
    - name: Install dependencies
      run: npm install
    - name: Export assets
      run: npm run export
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Recover App Secrets PROD
      run: 'echo "$APP_SECRETS_PROD_YAML" > secrets.yaml'
      shell: bash
      env:
        APP_SECRETS_PROD_YAML: ${{ secrets.APP_SECRETS_PROD_YAML }}
    - name: Deploy PROD
      run: gcloud app deploy ./app.yaml --quiet
    - name: Deploy CRON
      run: gcloud app deploy ./cron.yaml --quiet
    - name: Announce on Slack
      run: |
        PREVIOUS_MERGE_COMMIT=`git log --merges --max-count=1 --pretty="%H" --skip=1`
        echo "[INFO] PREVIOUS_COMMIT\t${PREVIOUS_MERGE_COMMIT}"
        COMMITS_INCLUDED=`git log --no-merges --pretty="* %s" $PREVIOUS_MERGE_COMMIT..`
        echo "[INFO] COMMITS_INCLUDED\t${COMMITS_INCLUDED}"
        curl -XPOST \
          -d "{
            \"channel\": \"tech\",
            \"text\": \":robot_face: 新しいバージョンがproduction環境にデプロイされました :tada:\n${COMMITS_INCLUDED}\n${PREVIOUS_MERGE_COMMIT}\ngithub.com/${GITHUB_REPOSITORY}/commits/main\"
          }" \
          -H "Authorization: Bearer ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}" \
          -H "Content-Type: application/json" \
          https://slack.com/api/chat.postMessage
